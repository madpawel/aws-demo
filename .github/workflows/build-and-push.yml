name: Build and Push to ECR

on:
  push:
    branches: ["main"]

permissions:
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'eu-central-1' }}
  ECR_REPOSITORY_INPUT: ${{ vars.ECR_REPOSITORY || 'app' }}
  CF_DISTRIBUTION_ID: ${{ vars.CF_DISTRIBUTION_ID }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Normalize ECR repository input
        id: normalize
        shell: bash
        run: |
          set -euo pipefail
          input="${ECR_REPOSITORY_INPUT}"
          # If full ECR URL provided, extract the repository path; else use as-is
          if echo "$input" | grep -q "\.amazonaws\.com"; then
            repo_path="${input#*.amazonaws.com/}"
            if [ "$repo_path" = "$input" ] || [ -z "$repo_path" ]; then
              repo_path="app"
            fi
            echo "ECR_REPOSITORY=$repo_path" >> "$GITHUB_ENV"
            echo "ecr_repository=$repo_path" >> "$GITHUB_OUTPUT"
          else
            echo "ECR_REPOSITORY=$input" >> "$GITHUB_ENV"
            echo "ecr_repository=$input" >> "$GITHUB_OUTPUT"
          fi

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ steps.normalize.outputs.ecr_repository }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ steps.normalize.outputs.ecr_repository }}:${{ github.sha }}

      - name: Invalidate CloudFront (optional)
        if: ${{ env.CF_DISTRIBUTION_ID != '' }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CF_DISTRIBUTION_ID" \
            --paths "/*"
